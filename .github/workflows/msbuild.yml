name: Build

on: [push, pull_request]

jobs:
  msvc:
    strategy:
      matrix:
        arch: [x86, x64, arm64]

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.arch }}-windows
      BUILD_CONFIGURATION: Release

    runs-on: windows-2025
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: lukka/get-cmake@628dd514bed37cb0a609e84a6186cbbaa2fc0140 # v4.1.2
    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
      with:
        vcpkgGitCommitId: ef97fc17c79603d33b13833db54bb77f8f747306
        vcpkgJsonGlob: '**/windows/vcpkg.json'

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
      if: ${{ matrix.arch != 'arm64' }}
      with:
        configurePreset: win-${{ matrix.arch }}-release
        buildPreset: win-${{ matrix.arch }}-release
        testPreset: win-${{ matrix.arch }}-release

    - name: Run CMake with vcpkg.json manifest (NO TESTS)
      uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
      if: ${{ matrix.arch == 'arm64' }}
      with:
        configurePreset: win-${{ matrix.arch }}-release
        buildPreset: win-${{ matrix.arch }}-release

    - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: openvpn3-msvc-${{ matrix.arch }}
        path: |
            ${{ github.workspace }}/build/**/*.exe
            ${{ github.workspace }}/build/**/*.dll
            !${{ github.workspace }}/build/**/test/ssl/**
            !${{ github.workspace }}/build/**/test/unittests/**
            !${{ github.workspace }}/build/**/CMakeFiles/**
            !${{ github.workspace }}/build/**/vcpkg_installed/**
  mingw:
    strategy:
      matrix:
        arch: [x86, x64]

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: lukka/get-cmake@628dd514bed37cb0a609e84a6186cbbaa2fc0140 # v4.1.2

    - name: Install dependencies
      run: sudo apt update && sudo apt install -y mingw-w64 unzip cmake build-essential

    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
      with:
        vcpkgGitCommitId: ef97fc17c79603d33b13833db54bb77f8f747306
        vcpkgJsonGlob: '**/mingw/vcpkg.json'

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
      with:
        configurePreset: mingw-${{ matrix.arch }}-release
        buildPreset: mingw-${{ matrix.arch }}-release

    - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: openvpn3-mingw-${{ matrix.arch }}
        path: |
            ${{ github.workspace }}/build/**/*.exe
            ${{ github.workspace }}/build/**/*.dll
            !${{ github.workspace }}/build/**/test/ssl/**
            !${{ github.workspace }}/build/**/test/unittests/**
            !${{ github.workspace }}/build/**/CMakeFiles/**
            !${{ github.workspace }}/build/**/vcpkg_installed/**
